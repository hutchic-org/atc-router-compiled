---
name: Release

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  DESTDIR: /tmp/build
  LUA_LIB_DIR: /usr/local/openresty/lualib
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.release.outputs.published }}
      release-git-tag: ${{ steps.release.outputs.release-git-tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.1

    - name: Release
      id: release
      uses: ahmadnassri/action-semantic-release@v2.2.8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  artifacts:
    needs: release
    name: Create Release Artifacts
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
        - x86_64-unknown-linux-gnu
        - aarch64-unknown-linux-gnu
        - x86_64-unknown-linux-musl
        - aarch64-unknown-linux-musl
        - powerpc64le-unknown-linux-gnu
        - s390x-unknown-linux-gnu

    steps:
    - uses: actions/checkout@v4.2.1
      with:
        submodules: true
        token: ${{ secrets.GH_TOKEN }}

    - run: rsync -av --exclude=".*" atc-router/* .

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - uses: actions-rs/cargo@v1
      env:
        RUSTFLAGS: -C target-feature=-crt-static     # Required for aarch64-unknown-linux-musl
      with:
        use-cross: true
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Install, Compress, and rename artifacts
      env:
        DESTDIR: ${{ env.DESTDIR }}
      run: |
        make install
        tar -C /tmp/build/ -czvf ${{ matrix.target }}.tar.gz .
        tar -C /tmp/build/ -czvf atc-router.tar.gz .

    - name: Add Release Artifacts to the Github Release
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.release.outputs.release-git-tag }}
        files: ${{ matrix.target }}.tar.gz

    - name: Log in to the Container registry
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3

    - name: Docker meta
      if: ${{ needs.release.outputs.published == 'true' }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/hutchic-org/atc-router-compiled
        flavor: |
          suffix=-${{ matrix.target }}
        tags: |
          type=sha
          type=ref,event=branch
          type=semver,pattern={{version}},value=${{ needs.release.outputs.release-git-tag }}
          type=semver,pattern={{major}}.{{minor}},value=${{ needs.release.outputs.release-git-tag }}

    - name: Build and push
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: docker/build-push-action@v6
      with:
        context: .
        push: ${{ needs.release.outputs.published == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  done:
    needs: [artifacts]
    name: Done
    if: needs.artifacts.result == 'success'
    runs-on: ubuntu-latest
    steps:
    - run: echo 'done'
